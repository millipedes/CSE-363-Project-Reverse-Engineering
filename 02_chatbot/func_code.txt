// WARNING: Could not reconcile some variable overlaps

void dbg.main(void)

{
    int32_t iVar1;
    ulong uVar2;
    ulong uVar3;
    int64_t iVar4;
    int64_t in_FS_OFFSET;
    ulong var_1cch;
    int32_t q;
    int32_t l;
    int32_t j;
    int32_t i;
    ulong f;
    ulong take;
    ulong data;
    uchar auStack224 [208];
    ulong var_8h;
    
    var_8h = *(in_FS_OFFSET + 0x28);
    _obj.htable = dbg.htable_create(60000);
    _obj.htable2 = dbg.htable_create(60000);
    _obj.htable3 = dbg.htable_create(60000);
    uVar2 = sym.imp.fopen(0x402a, 0x4028);
    uVar3 = sym.imp.malloc(200);
    while( true ) {
        iVar1 = sym.imp.feof(uVar2);
        if (iVar1 != 0) break;
        sym.imp.fgets(uVar3, 200, uVar2);
        var_1cch._0_4_ = 0;
        _obj.sv = sym.imp.strtok(uVar3, 0x4036);
        while (_obj.sv != 0) {
            sym.imp.strcpy(&data + var_1cch * 0x19, _obj.sv);
            var_1cch._0_4_ = var_1cch + 1;
            _obj.sv = sym.imp.strtok(0, 0x4036);
        }
        dbg.htable_set(_obj.htable, &data, auStack224);
    }
    sym.imp.fclose(uVar2);
    uVar2 = sym.imp.fopen("./src/course_names", 0x4028);
    while( true ) {
        iVar1 = sym.imp.feof(uVar2);
        if (iVar1 != 0) break;
        sym.imp.fgets(uVar3, 200, uVar2);
        var_1cch._4_4_ = 0;
        _obj.sv = sym.imp.strtok(uVar3, 0x4036);
        while (_obj.sv != 0) {
            sym.imp.strcpy(&data + var_1cch._4_4_ * 0x19, _obj.sv);
            var_1cch._4_4_ = var_1cch._4_4_ + 1;
            _obj.sv = sym.imp.strtok(0, 0x4036);
        }
        dbg.htable_set(_obj.htable2, &data, auStack224);
    }
    sym.imp.fclose(uVar2);
    uVar2 = sym.imp.fopen("./src/faculty_names", 0x4028);
    while( true ) {
        iVar1 = sym.imp.feof(uVar2);
        if (iVar1 != 0) break;
        sym.imp.fgets(uVar3, 200, uVar2);
        q = 0;
        _obj.sv = sym.imp.strtok(uVar3, 0x4036);
        while (_obj.sv != 0) {
            sym.imp.strcpy(&data + q * 0x19, _obj.sv);
            q = q + 1;
            _obj.sv = sym.imp.strtok(0, 0x4036);
        }
        dbg.htable_set(_obj.htable3, &data, auStack224);
    }
    sym.imp.fclose(uVar2);
    sym.imp.printf("What\'s your name? :- ");
    dbg.gets(obj.user_name);
    sym.imp.printf("Hello %s, Nice to have you.\n", obj.user_name);
    sym.imp.puts("Type your query....");
    do {
        _obj.h = 0;
        sym.imp.printf(0x40a6);
        dbg.gets(obj.c);
        dbg.strlwr(obj.c);
        l = 0;
        _obj.sv = sym.imp.strtok(obj.c, " -,/.*");
        while (_obj.sv != 0) {
            sym.imp.strcpy(obj.word + l * 10, _obj.sv);
            l = l + 1;
            _obj.sv = sym.imp.strtok(0, " -,/.*");
        }
        for (i = 0; i < l; i = i + 1) {
            for (j = 0; j < 0x96; j = j + 1) {
                iVar1 = sym.imp.strcmp(obj.word + i * 10, obj.keyword + j * 0x14);
                if (iVar1 == 0) {
                    iVar4 = _obj.h;
                    _obj.h = _obj.h + 1;
                    sym.imp.strcpy(obj.word_search + iVar4 * 10, obj.word + i * 10);
                }
            }
        }
        dbg.print_words();
    } while( true );
}
[0x000018ab]> s sym.print_words
[0x00002b69]> pdg

// WARNING: Variable defined which should be unmapped: var_8h
// WARNING: Could not reconcile some variable overlaps

void dbg.print_words(void)

{
    bool bVar1;
    int32_t iVar2;
    int64_t iVar3;
    ulong uVar4;
    ulong uVar5;
    int32_t x;
    int32_t var_30h;
    ulong i;
    ulong k;
    int32_t flag2;
    int32_t l;
    ulong var_8h;
    
    if (_obj.h == 1) {
        for (var_30h = 0; var_30h < 0x32; var_30h = var_30h + 1) {
            iVar2 = sym.imp.strcmp(obj.word_search, obj.course + var_30h * 0x14);
            if (iVar2 == 0) {
                x = 1;
            }
        }
        if (x == 1) {
            sym.imp.puts("\n Choose one option (1,2,3) :-  ");
            sym.imp.puts("\n 1. Want financial details?  ");
            sym.imp.puts("\n 2. Want sem subject details?  ");
            sym.imp.puts("\n 3. Want both the details?  ");
            sym.imp.printf(0x40a6);
            sym.imp.__isoc99_scanf(0x413f, obj.ch);
            if (_obj.ch == 1) {
                dbg.search_course1(obj.word_search);
                dbg.search_course2(obj.word_search);
                dbg.gets(obj.c);
            }
            else if (_obj.ch == 2) {
                dbg.search_subjects(obj.word_search);
                dbg.gets(obj.c);
            }
            else if (_obj.ch == 3) {
                sym.imp.puts(
                            "\n\n__________________________Subjects Details__________________________________________________________________\n"
                            );
                dbg.search_subjects(obj.word_search);
                sym.imp.puts(
                            "__________________________Finacitial Details__________________________________________________________________\n"
                            );
                dbg.search_course1(obj.word_search);
                dbg.search_course2(obj.word_search);
                dbg.gets(obj.c);
            }
        }
        else {
            dbg.search_faculty(obj.word_search);
            uVar4 = _reloc.stdout;
            uVar5 = dbg.htable_get(_obj.htable, obj.word_search);
            sym.imp.fputs(uVar5, uVar4);
            sym.imp.fputc(10, _reloc.stdout);
        }
    }
    if (_obj.h == 0) {
        sym.imp.puts("\nplease be more specific.");
    }
    if (1 < _obj.h) {
        k._0_4_ = 0;
        bVar1 = false;
        sym.imp.printf("\n\n%s ,I found more than one keyword in your sentence. Please choose one (1....n):\n\n", 
                       obj.user_name);
        for (i._0_4_ = 0; i < _obj.h; i._0_4_ = i + 1) {
            flag2 = 0;
            for (i._4_4_ = 0; i._4_4_ < 0x32; i._4_4_ = i._4_4_ + 1) {
                iVar2 = sym.imp.strcmp(obj.word_search + i * 10, obj.course + i._4_4_ * 0x14);
                if ((iVar2 == 0) && (flag2 = flag2 + 1,  !bVar1)) {
                    l = k + 1;
                    sym.imp.strcpy(obj.word_search2 + k * 10, obj.word_search + i * 10);
                    sym.imp.printf("%d. ", l);
                    uVar4 = dbg.htable_get(_obj.htable2, obj.word_search2 + k * 10);
                    sym.imp.puts(uVar4);
                    bVar1 = true;
                    k._0_4_ = l;
                }
            }
            if (flag2 == 0) {
                iVar2 = k + 1;
                sym.imp.strcpy(obj.word_search2 + k * 10, obj.word_search + i * 10);
                sym.imp.printf("%d. ", iVar2);
                iVar3 = dbg.htable_get(_obj.htable3, obj.word_search2 + k * 10);
                if (iVar3 == 0) {
                    sym.imp.printf("%s\n\n", obj.word_search2 + k * 10);
                    k._0_4_ = iVar2;
                }
                else {
                    uVar4 = dbg.htable_get(_obj.htable3, obj.word_search2 + k * 10);
                    sym.imp.puts(uVar4);
                    k._0_4_ = iVar2;
                }
            }
        }
        sym.imp.printf(0x40a6);
        sym.imp.__isoc99_scanf(0x413f, obj.ch);
        iVar2 = _obj.ch + -1;
        if (l == _obj.ch) {
            sym.imp.puts("\n Choose one option (1,2,3) :-  ");
            sym.imp.puts("\n 1. Want financial details?  ");
            sym.imp.puts("\n 2. Want sem subject details?  ");
            sym.imp.puts("\n 3. Want both the details?  ");
            sym.imp.printf(0x40a6);
            sym.imp.__isoc99_scanf(0x413f, obj.ch);
            if (_obj.ch == 1) {
                dbg.search_course1(obj.word_search + iVar2 * 10);
                dbg.search_course2(obj.word_search + iVar2 * 10);
            }
            else if (_obj.ch == 2) {
                dbg.search_subjects(obj.word_search + iVar2 * 10);
            }
            else if (_obj.ch == 3) {
                sym.imp.puts(
                            "\n\n__________________________Subjects Details__________________________________________________________________\n"
                            );
                dbg.search_subjects(obj.word_search + iVar2 * 10);
                sym.imp.puts(
                            "\n\n__________________________Finacitial Details__________________________________________________________________\n"
                            );
                dbg.search_course1(obj.word_search + iVar2 * 10);
                dbg.search_course2(obj.word_search + iVar2 * 10);
            }
        }
        else {
            dbg.search_faculty(obj.word_search2 + iVar2 * 10);
            uVar4 = _reloc.stdout;
            uVar5 = dbg.htable_get(_obj.htable, obj.word_search2 + iVar2 * 10);
            sym.imp.fputs(uVar5, uVar4);
            sym.imp.fputc(10, _reloc.stdout);
        }
        dbg.gets(obj.c);
    }
    return;
}
[0x00002b69]> s sym.search_faculty
[0x00001ec3]> pdg

// WARNING: Could not reconcile some variable overlaps

void dbg.search_faculty(ulong arg1)

{
    int32_t iVar1;
    ulong uVar2;
    int64_t in_FS_OFFSET;
    ulong name;
    char c;
    ulong i;
    ulong addr;
    ulong var_18h;
    ulong var_10h;
    int64_t canary;
    
    canary = *(in_FS_OFFSET + 0x28);
    for (i._0_4_ = 0; i < 0x32; i._0_4_ = i + 1) {
        iVar1 = sym.imp.strcmp(arg1, "sumit" + i * 0x14);
        if (iVar1 == 0) {
            addr = 0x61662f6372732f2e;
            var_18h = 0x2f79746c7563;
            var_10h._0_4_ = 0;
            sym.imp.strcat(&addr, arg1);
            uVar2 = sym.imp.fopen(&addr, 0x4028);
            c = sym.imp.fgetc(uVar2);
            while (c != -1) {
                sym.imp.putchar(c);
                c = sym.imp.fgetc();
            }
            sym.imp.fclose(uVar2);
        }
    }
    sym.imp.free(arg1);
    sym.imp.putchar(10);
    if (canary != *(in_FS_OFFSET + 0x28)) {
        sym.imp.__stack_chk_fail();
    }
    return;
}
[0x00001ec3]> s sym.search_course1
[0x00001ff6]> pdg

// WARNING: Could not reconcile some variable overlaps

void dbg.search_course1(ulong arg1)

{
    int32_t iVar1;
    ulong uVar2;
    int64_t iVar3;
    ulong *puVar4;
    int64_t in_FS_OFFSET;
    ulong name;
    char c;
    ulong i;
    ulong course1;
    ulong var_408h;
    ulong var_400h;
    ulong var_3f4h;
    ulong var_3ech;
    ulong var_3e0h;
    ulong var_3d8h;
    ulong var_3cch;
    ulong var_3c4h;
    ulong var_3b8h;
    ulong var_3b0h;
    ulong var_3a4h;
    ulong var_39ch;
    ulong var_390h;
    ulong var_388h;
    ulong var_37ch;
    ulong var_374h;
    ulong var_368h;
    ulong var_360h;
    ulong var_354h;
    ulong var_34ch;
    ulong var_340h;
    ulong var_338h;
    ulong var_32ch;
    ulong var_324h;
    ulong addr;
    ulong var_18h;
    ulong var_10h;
    int64_t canary;
    
    canary = *(in_FS_OFFSET + 0x28);
    puVar4 = &course1;
    for (iVar3 = 0x7d; iVar3 != 0; iVar3 = iVar3 + -1) {
        *puVar4 = 0;
        puVar4 = puVar4 + 1;
    }
    course1 = 0x74766363;
    var_408h = 0;
    var_400h._0_4_ = 0;
    stack0xfffffffffffffbfc = 0x64756f6c63;
    var_3f4h = 0;
    var_3ech._0_4_ = 0;
    stack0xfffffffffffffc10 = 0x6e697475706d6f63;
    var_3e0h = 0x67;
    var_3d8h._0_4_ = 0;
    stack0xfffffffffffffc24 = 0x696c617574726963;
    var_3cch = 0x6e6f6974617a;
    var_3c4h._0_4_ = 0;
    stack0xfffffffffffffc38 = 0x7373656e69737562;
    var_3b8h = 0;
    var_3b0h._0_4_ = 0;
    stack0xfffffffffffffc4c = 0x636974796c616e61;
    var_3a4h = 0x73;
    var_39ch._0_4_ = 0;
    stack0xfffffffffffffc60 = 0x617a696d6974706f;
    var_390h = 0x6e6f6974;
    var_388h._0_4_ = 0;
    stack0xfffffffffffffc74 = 0x6f6162;
    var_37ch = 0;
    var_374h._0_4_ = 0;
    stack0xfffffffffffffc88 = 0x7265627963;
    var_368h = 0;
    var_360h._0_4_ = 0;
    stack0xfffffffffffffc9c = 0x7974697275636573;
    var_354h = 0;
    var_34ch._0_4_ = 0;
    stack0xfffffffffffffcb0 = 0x6369736e65726f66;
    var_340h = 0x73;
    var_338h._0_4_ = 0;
    stack0xfffffffffffffcc4 = 0x667363;
    var_32ch = 0;
    var_324h._0_4_ = 0;
    for (i._0_4_ = 0; i < 0x32; i._0_4_ = i + 1) {
        iVar1 = sym.imp.strcmp(arg1, &course1 + i * 0x14);
        if (iVar1 == 0) {
            addr = 0x6f632f6372732f2e;
            var_18h = 0x7465735f65737275;
            var_10h._0_4_ = 0x31;
            uVar2 = sym.imp.fopen(&addr, 0x4028);
            c = sym.imp.fgetc(uVar2);
            while (c != -1) {
                sym.imp.putchar(c);
                c = sym.imp.fgetc();
            }
            sym.imp.fclose(uVar2);
        }
    }
    sym.imp.puts(0x40b1);
    if (canary != *(in_FS_OFFSET + 0x28)) {
        sym.imp.__stack_chk_fail();
    }
    return;
}
[0x00001ff6]> s sym.search_course2
[0x0000231b]> pdg

// WARNING: Could not reconcile some variable overlaps

void dbg.search_course2(ulong arg1)

{
    int32_t iVar1;
    ulong uVar2;
    int64_t iVar3;
    ulong *puVar4;
    int64_t in_FS_OFFSET;
    ulong name;
    char c;
    ulong i;
    ulong course2;
    ulong var_408h;
    ulong var_400h;
    ulong var_3f4h;
    ulong var_3ech;
    ulong var_3e0h;
    ulong var_3d8h;
    ulong var_3cch;
    ulong var_3c4h;
    ulong var_3b8h;
    ulong var_3b0h;
    ulong var_3a4h;
    ulong var_39ch;
    ulong var_390h;
    ulong var_388h;
    ulong var_37ch;
    ulong var_374h;
    ulong var_368h;
    ulong var_360h;
    ulong var_354h;
    ulong var_34ch;
    ulong var_340h;
    ulong var_338h;
    ulong var_32ch;
    ulong var_324h;
    ulong var_318h;
    ulong var_310h;
    ulong var_304h;
    ulong var_2fch;
    ulong var_2f0h;
    ulong var_2e8h;
    ulong var_2dch;
    ulong var_2d4h;
    ulong var_2c8h;
    ulong var_2c0h;
    ulong var_2b4h;
    ulong var_2ach;
    ulong var_2a0h;
    ulong var_298h;
    ulong var_28ch;
    ulong var_284h;
    ulong var_278h;
    ulong var_270h;
    ulong var_264h;
    ulong var_25ch;
    ulong var_250h;
    ulong var_248h;
    ulong var_23ch;
    ulong var_234h;
    ulong var_228h;
    ulong var_220h;
    ulong var_214h;
    ulong var_20ch;
    ulong var_200h;
    ulong var_1f8h;
    ulong var_1ech;
    ulong var_1e4h;
    ulong var_1d8h;
    ulong var_1d0h;
    ulong var_1c4h;
    ulong var_1bch;
    ulong var_1b0h;
    ulong var_1a8h;
    ulong var_19ch;
    ulong var_194h;
    ulong var_188h;
    ulong var_180h;
    ulong var_174h;
    ulong var_16ch;
    ulong var_160h;
    ulong var_158h;
    ulong var_14ch;
    ulong var_144h;
    ulong var_138h;
    ulong var_130h;
    ulong var_124h;
    ulong var_11ch;
    ulong var_110h;
    ulong var_108h;
    ulong addr;
    ulong var_18h;
    ulong var_10h;
    int64_t canary;
    
    canary = *(in_FS_OFFSET + 0x28);
    puVar4 = &course2;
    for (iVar3 = 0x7d; iVar3 != 0; iVar3 = iVar3 + -1) {
        *puVar4 = 0;
        puVar4 = puVar4 + 1;
    }
    course2 = 0x73736f;
    var_408h = 0;
    var_400h._0_4_ = 0;
    stack0xfffffffffffffbfc = 0x736f736f;
    var_3f4h = 0;
    var_3ech._0_4_ = 0;
    stack0xfffffffffffffc10 = 0x6e65706f;
    var_3e0h = 0;
    var_3d8h._0_4_ = 0;
    stack0xfffffffffffffc24 = 0x656372756f73;
    var_3cch = 0;
    var_3c4h._0_4_ = 0;
    stack0xfffffffffffffc38 = 0x647261646e617473;
    var_3b8h = 0x73;
    var_3b0h._0_4_ = 0;
    stack0xfffffffffffffc4c = 0x69676f;
    var_3a4h = 0;
    var_39ch._0_4_ = 0;
    stack0xfffffffffffffc60 = 0x6c696f;
    var_390h = 0;
    var_388h._0_4_ = 0;
    stack0xfffffffffffffc74 = 0x736167;
    var_37ch = 0;
    var_374h._0_4_ = 0;
    stack0xfffffffffffffc88 = 0x696c617574726963;
    var_368h = 0x6e6f6974617a;
    var_360h._0_4_ = 0;
    stack0xfffffffffffffc9c = 0x6d6172666e69616d;
    var_354h = 0x65;
    var_34ch._0_4_ = 0;
    stack0xfffffffffffffcb0 = 0x74666d;
    var_340h = 0;
    var_338h._0_4_ = 0;
    stack0xfffffffffffffcc4 = 0x72656d6d6f632d65;
    var_32ch = 0x6563;
    var_324h._0_4_ = 0;
    stack0xfffffffffffffcd8 = 0x6d6f6365;
    var_318h = 0;
    var_310h._0_4_ = 0;
    stack0xfffffffffffffcec = 0x656372656d6d6f63;
    var_304h = 0;
    var_2fch._0_4_ = 0;
    stack0xfffffffffffffd00 = 0x6d6f632d65;
    var_2f0h = 0;
    var_2e8h._0_4_ = 0;
    stack0xfffffffffffffd14 = 0x6172666e692d7469;
    var_2dch = 0;
    var_2d4h._0_4_ = 0;
    stack0xfffffffffffffd28 = 0x6172666e697469;
    var_2c8h = 0;
    var_2c0h._0_4_ = 0;
    stack0xfffffffffffffd3c = 0x7274736172666e69;
    var_2b4h = 0x657275746375;
    var_2ach._0_4_ = 0;
    stack0xfffffffffffffd50 = 0x676e696b6e6162;
    var_2a0h = 0;
    var_298h._0_4_ = 0;
    stack0xfffffffffffffd64 = 0x6169636e616e6966;
    var_28ch = 0x6c;
    var_284h._0_4_ = 0;
    stack0xfffffffffffffd78 = 0x7365636976726573;
    var_278h = 0;
    var_270h._0_4_ = 0;
    stack0xfffffffffffffd8c = 0x636e617275736e69;
    var_264h = 0x65;
    var_25ch._0_4_ = 0;
    stack0xfffffffffffffda0 = 0x69736662;
    var_250h = 0;
    var_248h._0_4_ = 0;
    stack0xfffffffffffffdb4 = 0x7363696870617267;
    var_23ch = 0;
    var_234h._0_4_ = 0;
    stack0xfffffffffffffdc8 = 0x676e696d6167;
    var_228h = 0;
    var_220h._0_4_ = 0;
    stack0xfffffffffffffddc = 0x6767;
    var_214h = 0;
    var_20ch._0_4_ = 0;
    stack0xfffffffffffffdf0 = 0x74656e7265746e69;
    var_200h = 0;
    var_1f8h._0_4_ = 0;
    stack0xfffffffffffffe04 = 0x746f69;
    var_1ech = 0;
    var_1e4h._0_4_ = 0;
    stack0xfffffffffffffe18 = 0x656c69626f6d;
    var_1d8h = 0;
    var_1d0h._0_4_ = 0;
    stack0xfffffffffffffe2c = 0x746163696c707061;
    var_1c4h = 0x6e6f69;
    var_1bch._0_4_ = 0;
    stack0xfffffffffffffe40 = 0x6d706f6c65766564;
    var_1b0h = 0x746e65;
    var_1a8h._0_4_ = 0;
    stack0xfffffffffffffe54 = 0x6961;
    var_19ch = 0;
    var_194h._0_4_ = 0;
    stack0xfffffffffffffe68 = 0x656e696863616d;
    var_188h = 0;
    var_180h._0_4_ = 0;
    stack0xfffffffffffffe7c = 0x676e696e7261656c;
    var_174h = 0;
    var_16ch._0_4_ = 0;
    stack0xfffffffffffffe90 = 0x6c6d;
    var_160h = 0;
    var_158h._0_4_ = 0;
    stack0xfffffffffffffea4 = 0x73706f766564;
    var_14ch = 0;
    var_144h._0_4_ = 0;
    stack0xfffffffffffffeb8 = 0x676962;
    var_138h = 0;
    var_130h._0_4_ = 0;
    stack0xfffffffffffffecc = 0x61746164;
    var_124h = 0;
    var_11ch._0_4_ = 0;
    stack0xfffffffffffffee0 = 0x61746164676962;
    var_110h = 0;
    var_108h._0_4_ = 0;
    for (i._0_4_ = 0; i < 0x32; i._0_4_ = i + 1) {
        iVar1 = sym.imp.strcmp(arg1, &course2 + i * 0x14);
        if (iVar1 == 0) {
            addr = 0x6f632f6372732f2e;
            var_18h = 0x7465735f65737275;
            var_10h._0_4_ = 0x32;
            uVar2 = sym.imp.fopen(&addr, 0x4028);
            c = sym.imp.fgetc(uVar2);
            while (c != -1) {
                sym.imp.putchar(c);
                c = sym.imp.fgetc();
            }
            sym.imp.fclose(uVar2);
        }
    }
    sym.imp.puts(0x40b1);
    if (canary != *(in_FS_OFFSET + 0x28)) {
        sym.imp.__stack_chk_fail();
    }
    return;
}
[0x0000231b]> s sym.search_subjects
[0x00002a0e]> pdg

// WARNING: Could not reconcile some variable overlaps

void dbg.search_subjects(ulong arg1)

{
    int32_t iVar1;
    int64_t iVar2;
    ulong uVar3;
    int64_t in_FS_OFFSET;
    ulong name;
    char c;
    ulong i;
    ulong addr;
    ulong var_28h;
    ulong var_20h;
    ulong var_18h;
    int64_t canary;
    
    canary = *(in_FS_OFFSET + 0x28);
    for (i._0_4_ = 0; i < 0x32; i._0_4_ = i + 1) {
        iVar1 = sym.imp.strcmp(arg1, obj.course + i * 0x14);
        if (iVar1 == 0) {
            addr = 0x72622f6372732f2e;
            var_28h = 0x6275735f68636e61;
            var_20h = 0x2f737463656a;
            var_18h._0_4_ = 0;
            var_18h._4_2_ = 0;
            sym.imp.strcat(&addr, arg1);
            iVar2 = sym.imp.strlen(&addr);
            *(&addr + iVar2) = 0x7478742e;
            *(&addr + iVar2 + 4) = 0;
            uVar3 = sym.imp.fopen(&addr, 0x4028);
            c = sym.imp.fgetc(uVar3);
            while (c != -1) {
                sym.imp.putchar(c);
                c = sym.imp.fgetc();
            }
            sym.imp.fclose(uVar3);
        }
    }
    sym.imp.putchar(10);
    if (canary != *(in_FS_OFFSET + 0x28)) {
        sym.imp.__stack_chk_fail();
    }
    return;
}

